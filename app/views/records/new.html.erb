<details class="usage-details">
  <summary>
    <h2>【🌱アプリの使い方】</h2>
  </summary>
  <div class="record-description">
    <%= image_tag "howtouse.png", alt: "使い方", class: "howtouse2" %>
  </div>
</details>

<div class="record-time">
  <% if current_user %>
    <% if current_user.first_record_date.present? %>
      <p>現在記録 <%= current_user.days_since_first_record %> 日目</p>
      <p>合計 <%= current_user.total_record_duration_hours %> 時間記録したよ🌱</p>
    <% else %>
      <p>まだ記録がないみたい！最初の記録を始めよう🌱</p>
    <% end %>
  <% else %>
    <p>記録をつけて、花を育ててみよう！</p>
  <p>
  <% end %>
</div>
<br>

<%# === ストップウォッチ関連のフォーム（時間記録用）ここから === %>
<%= form_with model: @record, url: records_path, data: { turbo: false }, id: "time_record_form" do |f| %>
  <div id="timer-section" data-flower-id="<%= @user_flower.id %>">
    <div id="timer">00:00:00</div>
    <div class="timer-controls">
      <button type="button" id="start" class="btn-start">開始</button>
      <button type="button" id="stop" class="btn-stop">停止</button>
      <button type="button" id="record_time_submit" class="btn-record">記録する</button>
    </div>

    <div id="seed-image" style="display: none;">
      <img src="<%= asset_path('Sprout.png') %>" alt="花の種" />
    </div>
  </div>

  <%= f.hidden_field :time, id: "record_time_field" %>
<% end %>
<%# === ストップウォッチ関連のフォーム（時間記録用）ここまで === %>

<div
  id="flower-message"
  data-flash-message="<%= j(flash[:notice] || flash[:alert]) %>"
  data-flash-image="<%= image_path(flash[:flower_image]) if flash[:flower_image].present? %>"
  data-flowerseeds-url="<%= image_url('Flowerseeds.png') %>"
  data-sprout-url="<%= image_url('Sprout.png') %>"
  data-bud-url="<%= image_url('Bud.gif') %>"
  data-fullbloom1-url="<%= image_url('FullBloom1.png') %>"
  data-fullbloom2-url="<%= image_url('FullBloom2.png') %>"
  data-fullbloom3-url="<%= image_url('FullBloom3.png') %>"
  data-fullbloom4-url="<%= image_url('FullBloom4.png') %>"
  data-fullbloom5-url="<%= image_url('FullBloom5.png') %>"
  data-thanks-url="<%= image_url('Thanks.png') %>"
  class="message hidden">
</div>

<hr>

<h2>ToDoリスト</h2>

<%# === ToDoタスク追加用のフォーム ここから === %>
<div class="todo-section">
  <%# このフォームが「TODOを追加」する役割を担うよ。 %>
  <%= form_with model: @record, url: records_path, data: { turbo_stream: true }, id: "new_record_form", class: "todo-form" do |f| %>
    <div id="record_errors">
      <% if @record.errors.any? %>
        <div class="error-messages">
          <h4><%= pluralize(@record.errors.count, "エラー") %>:</h4>
          <ul>
            <% @record.errors.full_messages.each do |message| %>
              <li><%= message %></li>
            <% end %>
          </ul>
        </div>
      <% end %>
    </div>

    <div class="field form-group">
      <%= f.label :task_name, "新しいToDoを追加", class: "form-label" %><br />
      <%= f.text_field :task_name, data: { autofocus: true }, class: "form-input", placeholder: "例: レポート作成、部屋の掃除" %>
    </div>

    <%# この submit ボタンがこのフォームを送信するよ %>
    <%= f.submit "ToDoを追加", class: "btn-add-todo" %>
  <% end %>

  <%# === ToDoリスト表示部分 ここから === %>
  <div class="todo-list-container" id="todo-list">
    <h3>未完了のToDo</h3>
    <ul id="todo_items" class="todo-list">
      <%= render partial: 'record', collection: @records %>
    </ul>
  </div>
  <%# === ToDoリスト表示部分 ここまで === %>
  <%= link_to "カレンダー/グラフへ", analytics_records_path, class: "btn-calendar" %>
</div>

<script src="https://cdn.jsdelivr.net/npm/canvas-confetti@1.9.3/dist/confetti.browser.js"></script>

<script>

// アプリを使い始めた実際の日付に設定してください。
const startDate = new Date('<%= current_user.created_at.strftime('%Y-%m-%dT%H:%M:%S') %>'); 
const today = new Date();

// 経過日数を計算します
const diffTime = Math.abs(today.getTime() - startDate.getTime());
const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));

// 経過日数が7日目の場合のみ、紙吹雪を降らせます
if (diffDays === 7) {
    var duration = 15 * 1000;
    var animationEnd = Date.now() + duration;
    var skew = 1;

    function randomInRange(min, max) {
        return Math.random() * (max - min) + min;
    }

    (function frame() {
        var timeLeft = animationEnd - Date.now();
        var ticks = Math.max(200, 500 * (timeLeft / duration));
        skew = Math.max(0.8, skew - 0.001);

        confetti({
            particleCount: 1,
            startVelocity: 0,
            ticks: ticks,
            origin: {
                x: Math.random(),
                y: (Math.random() * skew) - 0.2
            },
            colors: ['#ffa4c2ff'],
            shapes: ['circle'],
            gravity: randomInRange(0.4, 0.6),
            scalar: randomInRange(0.4, 1),
            drift: randomInRange(-0.4, 0.4)
        });

        if (timeLeft > 0) {
            requestAnimationFrame(frame);
        }
    }());
}
</script>